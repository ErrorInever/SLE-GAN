            Conv2d-1          [-1, 3, 512, 512]             147
         LeakyReLU-2          [-1, 3, 512, 512]               0
            Conv2d-3         [-1, 16, 256, 256]             784
       BatchNorm2d-4         [-1, 16, 256, 256]              32
         LeakyReLU-5         [-1, 16, 256, 256]               0
              Blur-6         [-1, 16, 256, 256]               0
            Conv2d-7         [-1, 32, 128, 128]           8,224
       BatchNorm2d-8         [-1, 32, 128, 128]              64
         LeakyReLU-9         [-1, 32, 128, 128]               0
           Conv2d-10         [-1, 32, 128, 128]           9,248
      BatchNorm2d-11         [-1, 32, 128, 128]              64
        LeakyReLU-12         [-1, 32, 128, 128]               0
             Blur-13         [-1, 16, 256, 256]               0
        AvgPool2d-14         [-1, 16, 128, 128]               0
           Conv2d-15         [-1, 32, 128, 128]             544
      BatchNorm2d-16         [-1, 32, 128, 128]              64
        LeakyReLU-17         [-1, 32, 128, 128]               0
  DownSampleBlock-18         [-1, 32, 128, 128]               0
             Blur-19         [-1, 32, 128, 128]               0
           Conv2d-20           [-1, 64, 64, 64]          32,832
      BatchNorm2d-21           [-1, 64, 64, 64]             128
        LeakyReLU-22           [-1, 64, 64, 64]               0
           Conv2d-23           [-1, 64, 64, 64]          36,928
      BatchNorm2d-24           [-1, 64, 64, 64]             128
        LeakyReLU-25           [-1, 64, 64, 64]               0
             Blur-26         [-1, 32, 128, 128]               0
        AvgPool2d-27           [-1, 32, 64, 64]               0
           Conv2d-28           [-1, 64, 64, 64]           2,112
      BatchNorm2d-29           [-1, 64, 64, 64]             128
        LeakyReLU-30           [-1, 64, 64, 64]               0
  DownSampleBlock-31           [-1, 64, 64, 64]               0
             Blur-32           [-1, 64, 64, 64]               0
           Conv2d-33          [-1, 128, 32, 32]         131,200
      BatchNorm2d-34          [-1, 128, 32, 32]             256
        LeakyReLU-35          [-1, 128, 32, 32]               0
           Conv2d-36          [-1, 128, 32, 32]         147,584
      BatchNorm2d-37          [-1, 128, 32, 32]             256
        LeakyReLU-38          [-1, 128, 32, 32]               0
             Blur-39           [-1, 64, 64, 64]               0
        AvgPool2d-40           [-1, 64, 32, 32]               0
           Conv2d-41          [-1, 128, 32, 32]           8,320
      BatchNorm2d-42          [-1, 128, 32, 32]             256
        LeakyReLU-43          [-1, 128, 32, 32]               0
  DownSampleBlock-44          [-1, 128, 32, 32]               0
             Blur-45          [-1, 128, 32, 32]               0
           Conv2d-46          [-1, 256, 16, 16]         524,544
      BatchNorm2d-47          [-1, 256, 16, 16]             512
        LeakyReLU-48          [-1, 256, 16, 16]               0
           Conv2d-49          [-1, 256, 16, 16]         590,080
      BatchNorm2d-50          [-1, 256, 16, 16]             512
        LeakyReLU-51          [-1, 256, 16, 16]               0
             Blur-52          [-1, 128, 32, 32]               0
        AvgPool2d-53          [-1, 128, 16, 16]               0
           Conv2d-54          [-1, 256, 16, 16]          33,024
      BatchNorm2d-55          [-1, 256, 16, 16]             512
        LeakyReLU-56          [-1, 256, 16, 16]               0
  DownSampleBlock-57          [-1, 256, 16, 16]               0
             Blur-58          [-1, 256, 16, 16]               0
           Conv2d-59            [-1, 512, 8, 8]       2,097,664
      BatchNorm2d-60            [-1, 512, 8, 8]           1,024
        LeakyReLU-61            [-1, 512, 8, 8]               0
           Conv2d-62            [-1, 512, 8, 8]       2,359,808
      BatchNorm2d-63            [-1, 512, 8, 8]           1,024
        LeakyReLU-64            [-1, 512, 8, 8]               0
             Blur-65          [-1, 256, 16, 16]               0
        AvgPool2d-66            [-1, 256, 8, 8]               0
           Conv2d-67            [-1, 512, 8, 8]         131,584
      BatchNorm2d-68            [-1, 512, 8, 8]           1,024
        LeakyReLU-69            [-1, 512, 8, 8]               0
  DownSampleBlock-70            [-1, 512, 8, 8]               0
         Upsample-71          [-1, 256, 16, 16]               0
             Blur-72          [-1, 256, 16, 16]               0
           Conv2d-73          [-1, 256, 16, 16]         590,080
      BatchNorm2d-74          [-1, 256, 16, 16]             512
              GLU-75          [-1, 128, 16, 16]               0
SimpleDecoderBlock-76          [-1, 128, 16, 16]               0
         Upsample-77          [-1, 128, 32, 32]               0
             Blur-78          [-1, 128, 32, 32]               0
           Conv2d-79          [-1, 128, 32, 32]         147,584
      BatchNorm2d-80          [-1, 128, 32, 32]             256
              GLU-81           [-1, 64, 32, 32]               0
SimpleDecoderBlock-82           [-1, 64, 32, 32]               0
         Upsample-83           [-1, 64, 64, 64]               0
             Blur-84           [-1, 64, 64, 64]               0
           Conv2d-85           [-1, 64, 64, 64]          36,928
      BatchNorm2d-86           [-1, 64, 64, 64]             128
              GLU-87           [-1, 32, 64, 64]               0
SimpleDecoderBlock-88           [-1, 32, 64, 64]               0
         Upsample-89         [-1, 32, 128, 128]               0
             Blur-90         [-1, 32, 128, 128]               0
           Conv2d-91          [-1, 6, 128, 128]           1,734
      BatchNorm2d-92          [-1, 6, 128, 128]              12
              GLU-93          [-1, 3, 128, 128]               0
SimpleDecoderBlock-94          [-1, 3, 128, 128]               0
    SimpleDecoder-95          [-1, 3, 128, 128]               0
         Upsample-96          [-1, 512, 16, 16]               0
             Blur-97          [-1, 512, 16, 16]               0
           Conv2d-98          [-1, 512, 16, 16]       2,359,808
      BatchNorm2d-99          [-1, 512, 16, 16]           1,024
             GLU-100          [-1, 256, 16, 16]               0
SimpleDecoderBlock-101          [-1, 256, 16, 16]               0
        Upsample-102          [-1, 256, 32, 32]               0
            Blur-103          [-1, 256, 32, 32]               0
          Conv2d-104          [-1, 256, 32, 32]         590,080
     BatchNorm2d-105          [-1, 256, 32, 32]             512
             GLU-106          [-1, 128, 32, 32]               0
SimpleDecoderBlock-107          [-1, 128, 32, 32]               0
        Upsample-108          [-1, 128, 64, 64]               0
            Blur-109          [-1, 128, 64, 64]               0
          Conv2d-110          [-1, 128, 64, 64]         147,584
     BatchNorm2d-111          [-1, 128, 64, 64]             256
             GLU-112           [-1, 64, 64, 64]               0
SimpleDecoderBlock-113           [-1, 64, 64, 64]               0
        Upsample-114         [-1, 64, 128, 128]               0
            Blur-115         [-1, 64, 128, 128]               0
          Conv2d-116          [-1, 6, 128, 128]           3,462
     BatchNorm2d-117          [-1, 6, 128, 128]              12
             GLU-118          [-1, 3, 128, 128]               0
SimpleDecoderBlock-119          [-1, 3, 128, 128]               0
   SimpleDecoder-120          [-1, 3, 128, 128]               0
          Conv2d-121            [-1, 512, 8, 8]         262,656
     BatchNorm2d-122            [-1, 512, 8, 8]           1,024
       LeakyReLU-123            [-1, 512, 8, 8]               0
          Conv2d-124              [-1, 1, 5, 5]           8,193
================================================================
Total params: 10,272,456
Trainable params: 10,272,456
Non-trainable params: 0
----------------------------------------------------------------
Input size (MB): 12.00
Forward/backward pass size (MB): 230.88
Params size (MB): 39.19
Estimated Total Size (MB): 282.06
----------------------------------------------------------------

[Layers]

Discriminator(
  (initial): Sequential(
    (0): Conv2d(3, 3, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
    (1): LeakyReLU(negative_slope=0.1)
    (2): Conv2d(3, 16, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
    (3): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (4): LeakyReLU(negative_slope=0.1)
  )
  (down_sample_128): DownSampleBlock(
    (down_sample_left): Sequential(
      (0): Blur()
      (1): Conv2d(16, 32, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
      (2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): LeakyReLU(negative_slope=0.1)
      (4): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): LeakyReLU(negative_slope=0.1)
    )
    (down_sample_right): Sequential(
      (0): Blur()
      (1): AvgPool2d(kernel_size=2, stride=2, padding=0)
      (2): Conv2d(16, 32, kernel_size=(1, 1), stride=(1, 1))
      (3): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (4): LeakyReLU(negative_slope=0.1)
    )
  )
  (down_sample_64): DownSampleBlock(
    (down_sample_left): Sequential(
      (0): Blur()
      (1): Conv2d(32, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
      (2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): LeakyReLU(negative_slope=0.1)
      (4): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): LeakyReLU(negative_slope=0.1)
    )
    (down_sample_right): Sequential(
      (0): Blur()
      (1): AvgPool2d(kernel_size=2, stride=2, padding=0)
      (2): Conv2d(32, 64, kernel_size=(1, 1), stride=(1, 1))
      (3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (4): LeakyReLU(negative_slope=0.1)
    )
  )
  (down_sample_32): DownSampleBlock(
    (down_sample_left): Sequential(
      (0): Blur()
      (1): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
      (2): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): LeakyReLU(negative_slope=0.1)
      (4): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): LeakyReLU(negative_slope=0.1)
    )
    (down_sample_right): Sequential(
      (0): Blur()
      (1): AvgPool2d(kernel_size=2, stride=2, padding=0)
      (2): Conv2d(64, 128, kernel_size=(1, 1), stride=(1, 1))
      (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (4): LeakyReLU(negative_slope=0.1)
    )
  )
  (down_sample_16): DownSampleBlock(
    (down_sample_left): Sequential(
      (0): Blur()
      (1): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
      (2): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): LeakyReLU(negative_slope=0.1)
      (4): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): LeakyReLU(negative_slope=0.1)
    )
    (down_sample_right): Sequential(
      (0): Blur()
      (1): AvgPool2d(kernel_size=2, stride=2, padding=0)
      (2): Conv2d(128, 256, kernel_size=(1, 1), stride=(1, 1))
      (3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (4): LeakyReLU(negative_slope=0.1)
    )
  )
  (down_sample_8): DownSampleBlock(
    (down_sample_left): Sequential(
      (0): Blur()
      (1): Conv2d(256, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1))
      (2): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (3): LeakyReLU(negative_slope=0.1)
      (4): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (5): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (6): LeakyReLU(negative_slope=0.1)
    )
    (down_sample_right): Sequential(
      (0): Blur()
      (1): AvgPool2d(kernel_size=2, stride=2, padding=0)
      (2): Conv2d(256, 512, kernel_size=(1, 1), stride=(1, 1))
      (3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (4): LeakyReLU(negative_slope=0.1)
    )
  )
  (decoder_part): SimpleDecoder(
    (body): ModuleList(
      (0): SimpleDecoderBlock(
        (simple_block): Sequential(
          (0): Upsample(scale_factor=2.0, mode=nearest)
          (1): Blur()
          (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): GLU(dim=1)
        )
      )
      (1): SimpleDecoderBlock(
        (simple_block): Sequential(
          (0): Upsample(scale_factor=2.0, mode=nearest)
          (1): Blur()
          (2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): GLU(dim=1)
        )
      )
      (2): SimpleDecoderBlock(
        (simple_block): Sequential(
          (0): Upsample(scale_factor=2.0, mode=nearest)
          (1): Blur()
          (2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): GLU(dim=1)
        )
      )
      (3): SimpleDecoderBlock(
        (simple_block): Sequential(
          (0): Upsample(scale_factor=2.0, mode=nearest)
          (1): Blur()
          (2): Conv2d(32, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): GLU(dim=1)
        )
      )
    )
  )
  (decoder): SimpleDecoder(
    (body): ModuleList(
      (0): SimpleDecoderBlock(
        (simple_block): Sequential(
          (0): Upsample(scale_factor=2.0, mode=nearest)
          (1): Blur()
          (2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): GLU(dim=1)
        )
      )
      (1): SimpleDecoderBlock(
        (simple_block): Sequential(
          (0): Upsample(scale_factor=2.0, mode=nearest)
          (1): Blur()
          (2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): GLU(dim=1)
        )
      )
      (2): SimpleDecoderBlock(
        (simple_block): Sequential(
          (0): Upsample(scale_factor=2.0, mode=nearest)
          (1): Blur()
          (2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): GLU(dim=1)
        )
      )
      (3): SimpleDecoderBlock(
        (simple_block): Sequential(
          (0): Upsample(scale_factor=2.0, mode=nearest)
          (1): Blur()
          (2): Conv2d(64, 6, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (3): BatchNorm2d(6, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
          (4): GLU(dim=1)
        )
      )
    )
  )
  (real_fake_logits_out): Sequential(
    (0): Conv2d(512, 512, kernel_size=(1, 1), stride=(1, 1))
    (1): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): LeakyReLU(negative_slope=0.1)
    (3): Conv2d(512, 1, kernel_size=(4, 4), stride=(1, 1))
  )
)